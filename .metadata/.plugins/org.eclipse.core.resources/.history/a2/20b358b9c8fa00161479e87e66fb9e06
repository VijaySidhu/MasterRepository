package com.google.interview.questions.trees;

/**
 * The diameter of a tree (sometimes called the width) is the number of nodes on
 * the longest path between two leaves in the tree
 * 
 * @author VijaySidhu
 *
 */
public class DiameterOfBinaryTree {

	/*
	 * define height =0 globally and call diameterOpt(root,height) from main
	 */
	int diameterOpt(Node root, Height height) {
		/*
		 * lh --> Height of left subtree rh --> Height of right subtree
		 */
		Height lh = new Height(), rh = new Height();

		if (root == null) {
			height.h = 0;
			return 0; /* diameter is also 0 */
		}

		/*
		 * ldiameter --> diameter of left subtree rdiameter --> Diameter of
		 * right subtree
		 */
		/*
		 * Get the heights of left and right subtrees in lh and rh And store the
		 * returned values in ldiameter and ldiameter
		 */
		lh.h++;
		rh.h++;
		int ldiameter = diameterOpt(root.left, lh);
		int rdiameter = diameterOpt(root.right, rh);

		/*
		 * Height of current node is max of heights of left and right subtrees
		 * plus 1
		 */
		height.h = Math.max(lh.h, rh.h) + 1;

		return Math.max(lh.h + rh.h + 1, Math.max(ldiameter, rdiameter));
	}

	public static void main(String[] args) {
		TreeNode root = new TreeNode(1);
		root.left = new TreeNode(2);
		root.right = new TreeNode(3);
		root.left.left = new TreeNode(4);
		root.right.right = new TreeNode(5);
		DiameterOfBinaryTree bt = new DiameterOfBinaryTree();
		Height ht = new Height();
		System.out.println(bt.diameter(root, ht));
	}

}
