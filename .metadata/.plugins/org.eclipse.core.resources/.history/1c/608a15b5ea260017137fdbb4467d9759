package com.google.interview.questions.graphs;

import java.util.LinkedList;
import java.util.Stack;

public class AllPathsBetweenTwoNodes {

	public static void main(String[] args) {

		Node node1 = new Node(1, State.Unvisited);
		Node node2 = new Node(1, State.Unvisited);
		Node node3 = new Node(1, State.Unvisited);
		Node node4 = new Node(1, State.Unvisited);
		Node node5 = new Node(1, State.Unvisited);
		Node node6 = new Node(1, State.Unvisited);

		// Add nodes
		Graph graph = new Graph();
		graph.addNode(node1);
		graph.addNode(node2);
		graph.addNode(node3);
		graph.addNode(node4);
		graph.addNode(node5);
		graph.addNode(node6);

		graph.addEdge(node1, node2);
		graph.addEdge(node2, node6);
		graph.addEdge(node3, node4);
		graph.addEdge(node5, node6);
		graph.addEdge(node1, node6);
		isDirectRoute(graph, node1, node6);
	}

	// DFS
	public static void isDirectRoute(Graph graph, Node source, Node destination) {
		Stack<Node> stack = new Stack<Node>();
	}

}
