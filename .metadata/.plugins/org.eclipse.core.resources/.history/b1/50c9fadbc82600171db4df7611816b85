package com.google.interview.questions.graphs;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 1. Adjacency Matrix(AM) 2. Adjacency
 * list(AL) Basic operations : Add Edge,
 * AM:: O(1) AL::O(log(n)); delete Edge,
 * AM:: O(1) AL::O(log(n)); Is there
 * edge between i and j AM:: O(1)
 * AL::O(log(n)); find successor of
 * given vertex AM :: O(n) AL::O(k));
 * find path between vertices AM ::
 * O(n*n) (n+m)
 * 
 * @author VijaySidhu
 */
public class GraphRepresentation {

	private int vertex;

	private Map<Integer, List<Integer>> adjList = new HashMap<Integer, List<Integer>>();

	public GraphRepresentation(int vertex) {
		this.vertex = vertex;
	}
}
