package com.google.interview.questions.trees;

/**
 * The diameter of a tree (sometimes called the width) is the number of nodes on
 * the longest path between two leaves in the tree
 * 
 * @author VijaySidhu
 *
 */
public class DiameterOfBinaryTree {

	class Height {
		int h;

	}

	Height lt = new Height();

	Height rt = new Height();

	int diameter(TreeNode root, Height ht) {
		if (root == null) {
			return 0;
		}
		lt.h++;
		rt.h++;
		int lDiameter = diameter(root.left, lt);
		int rDiameter = diameter(root.right, rt);

		/*
		 * Height of current node is max of heights of left and right subtrees
		 * plus 1
		 */
		ht.h = Math.max(lDiameter, rDiameter) + 1;
		return Math.max(lt.h + rt.h + 1, Math.max(lDiameter, rDiameter));
	}

	public static void main(String[] args) {
		TreeNode rootNode = new TreeNode(5);
		TreeNode rootNode1 = new TreeNode(2);
		TreeNode rootNode2 = new TreeNode(3);
		TreeNode rootNode3 = new TreeNode(4);
		TreeNode rootNode4 = new TreeNode(5);
		TreeNode rootNode5 = new TreeNode(6);
		rootNode.left = rootNode1;
		rootNode.right = rootNode2;
		rootNode1.left = rootNode3;
		rootNode1.right = rootNode4;
		rootNode2.left = rootNode5;
		rootNode2.right = rootNode5;
	}

}
