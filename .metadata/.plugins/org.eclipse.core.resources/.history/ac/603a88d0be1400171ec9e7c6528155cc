package com.google.interview.questions.core.java;

public class WaitNotifyProducerConsumer {

}

/**
 * A java bean class on which threads
 * will work and call wait and notify
 * methods.
 * 
 * @author VijaySidhu
 *
 */
class Message {

	String message;

	public Message(String message) {
		this.message = message;
	}

	public String getMessage() {
		return message;
	}

	public void setMessage(String message) {
		this.message = message;
	}

	public String getMsg() {
		// TODO Auto-generated method stub
		return null;
	}
}

class Waiter implements Runnable {

	private Message msg;

	public Waiter(Message m) {
		this.msg = m;
	}

	@Override
	public void run() {
		String name = Thread.currentThread().getName();
		synchronized (msg) {
			try {
				System.out.println(name + " waiting to get notified at time:" + System.currentTimeMillis());
				msg.wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			System.out.println(name + " waiter thread got notified at time:" + System.currentTimeMillis());
			//process the message now
			System.out.println(name + " processed: " + msg.getMsg());
		}
	}
}
